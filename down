#!/bin/bash
listagents() {
	echo "iphone4"
	echo "wordwin7"
	echo "iewinxp"
	echo "iewin10"
	echo "galaxy-nexus"
        echo "wordwin10"
}

if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <url whose contents and headers will be dumped> <user agent id>"
  echo "Valid user agent id are:"
  listagents
  exit 1
fi

case $2 in
  iphone4)
    ua="Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Version/4.0.5 Mobile/8A293 Safari/6531.22.7";;
  wordwin7)
    ua="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.3)";;
  iewinxp)
   ua="Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3";;
  iewin10)
    ua="Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko";;
  wordwin10)
    ua="Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.2; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)";;
  galaxy-nexus)
    ua="Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19";;
  *)
    echo "User agent id not valid, choose one of the following"
    listagents
    exit 1
   ;;
esac

headers=$RANDOM"-headers"
while [ -e $headers ]
do
  headers=$RANDOM"-headers"
done

content=$RANDOM"-headers"
while [ -e $content ]
do
  content=$RANDOM"-headers"
done

echo $headers

curl -A "$ua" --referer "-" --dump-header $headers --output $content "$1"
md5content=$(md5sum $content | cut -d ' ' -f 1)


audit=$RANDOM"-audit"
while [ -e $audit ]
do
  audit=$RANDOM"-audit"
done


curl -A "$ua" --referer "-" --output $audit seguridad.uphero.com 2>/dev/null
log=$(grep "Client" $audit | sed 's/<\/BODY>//g' | sed 's/<br \\>/- /g')
now=$(date)
echo $log "-" $2 "-" $(date) "-" $1 "-" $(grep -e " [0-9][0-9][0-9] " $headers) >> down.log

rm $audit
mv $headers $md5content-"headers.txt"
mv $content $md5content-"content"

echo "if required password compress file:  zip -e --password infected archivo.zip archivos-a-comprimir."
